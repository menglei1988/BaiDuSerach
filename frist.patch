Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision )
+++ gradle/wrapper/gradle-wrapper.properties	(revision )
@@ -0,0 +1,6 @@
+#Wed Oct 21 11:34:03 PDT 2015
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.8-all.zip
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(revision )
+++ settings.gradle	(revision )
@@ -0,0 +1,1 @@
+include ':app', ':mytestweb'
Index: .idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.name	(revision )
+++ .idea/.name	(revision )
@@ -0,0 +1,1 @@
+BaiDuSerach
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision )
+++ app/build.gradle	(revision )
@@ -0,0 +1,28 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 23
+    buildToolsVersion "23.0.1"
+
+    defaultConfig {
+        applicationId "com.asynctasktest.mengl.baiduserach"
+        minSdkVersion 15
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+dependencies {
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    testCompile 'junit:junit:4.12'
+    compile 'com.android.support:appcompat-v7:23.1.1'
+    compile 'org.xutils:xutils:3.3.22'
+    compile 'com.google.android.gms:play-services-appindexing:8.1.0'
+}
Index: app/src/main/java/com/asynctasktest/mengl/baiduserach/util/LogUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/asynctasktest/mengl/baiduserach/util/LogUtil.java	(revision )
+++ app/src/main/java/com/asynctasktest/mengl/baiduserach/util/LogUtil.java	(revision )
@@ -0,0 +1,76 @@
+package com.asynctasktest.mengl.baiduserach.util;
+
+import java.text.SimpleDateFormat;
+import java.util.Date;
+
+import android.util.Log;
+
+public class LogUtil {
+	private static final boolean DEBUG = true;
+	
+	public static void d(String TAG, String method, String msg) {
+		Log.d(TAG, "[" + method + "]" + msg);
+	}
+	
+	public static void d(String TAG, String msg){
+		if (DEBUG) {
+			Log.d(TAG, "[" + getFileLineMethod() + "]" + msg);
+		}
+	}
+	
+	public static void d(String msg){
+		if (DEBUG) {
+			Log.d(_FILE_(), "[" + getLineMethod() + "]" + msg);
+		}
+	}
+	
+	public static void e(String msg){
+		if (DEBUG) {
+			Log.e(_FILE_(), getLineMethod() + msg);
+		}
+	}
+	
+	public static void e(String TAG, String msg){
+		if (DEBUG) {
+			Log.e(TAG, getLineMethod() + msg);
+		}
+	}
+
+	public static String getFileLineMethod() {
+		StackTraceElement traceElement = ((new Exception()).getStackTrace())[2];
+		StringBuffer toStringBuffer = new StringBuffer("[")
+				.append(traceElement.getFileName()).append(" | ")
+				.append(traceElement.getLineNumber()).append(" | ")
+				.append(traceElement.getMethodName()).append("]");
+		return toStringBuffer.toString();
+	}
+	
+	public static String getLineMethod() {
+		StackTraceElement traceElement = ((new Exception()).getStackTrace())[2];
+		StringBuffer toStringBuffer = new StringBuffer("[")
+				.append(traceElement.getLineNumber()).append(" | ")
+				.append(traceElement.getMethodName()).append("]");
+		return toStringBuffer.toString();
+	}
+
+	public static String _FILE_() {
+		StackTraceElement traceElement = ((new Exception()).getStackTrace())[2];
+		return traceElement.getFileName();
+	}
+
+	public static String _FUNC_() {
+		StackTraceElement traceElement = ((new Exception()).getStackTrace())[1];
+		return traceElement.getMethodName();
+	}
+
+	public static int _LINE_() {
+		StackTraceElement traceElement = ((new Exception()).getStackTrace())[1];
+		return traceElement.getLineNumber();
+	}
+
+	public static String _TIME_() {
+		Date now = new Date();
+		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
+		return sdf.format(now);
+	}
+}
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(revision )
+++ .gitignore	(revision )
@@ -0,0 +1,8 @@
+*.iml
+.gradle
+/local.properties
+/.idea/workspace.xml
+/.idea/libraries
+.DS_Store
+/build
+/captures
Index: app/src/main/java/com/asynctasktest/mengl/baiduserach/util/DownLoadImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/asynctasktest/mengl/baiduserach/util/DownLoadImage.java	(revision )
+++ app/src/main/java/com/asynctasktest/mengl/baiduserach/util/DownLoadImage.java	(revision )
@@ -0,0 +1,45 @@
+package com.asynctasktest.mengl.baiduserach.util;
+
+import java.io.InputStream;
+
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.os.AsyncTask;
+import android.util.Log;
+import android.widget.ImageView;
+
+/**
+ * 在4.0系统中显示网络图片
+ * 
+ * @author Administrator
+ * 
+ */
+public class DownLoadImage extends AsyncTask<String, Void, Bitmap> {
+	ImageView imageView;
+
+	public DownLoadImage(ImageView imageView) {
+		// TODO Auto-generated constructor stub
+		this.imageView = imageView;
+	}
+
+	@Override
+	protected Bitmap doInBackground(String... urls) {
+		// TODO Auto-generated method stub
+		String url = urls[0];
+		Bitmap tmpBitmap = null;
+		try {
+			InputStream is = new java.net.URL(url).openStream();
+			tmpBitmap = BitmapFactory.decodeStream(is);
+		} catch (Exception e) {
+			e.printStackTrace();
+			Log.i("test", e.getMessage());
+		}
+		return tmpBitmap;
+	}
+
+	@Override
+	protected void onPostExecute(Bitmap result) {
+		// TODO Auto-generated method stub
+		imageView.setImageBitmap(result);
+	}
+}
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision )
+++ .idea/gradle.xml	(revision )
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="distributionType" value="LOCAL" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleHome" value="E:\Android2016\Android Studio\gradle\gradle-2.8" />
+        <option name="gradleJvm" value="1.7" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/app" />
+            <option value="$PROJECT_DIR$/mytestweb" />
+          </set>
+        </option>
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.gitignore	(revision )
+++ app/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision )
+++ .idea/compiler.xml	(revision )
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <resourceExtensions />
+    <wildcardResourcePatterns>
+      <entry name="!?*.java" />
+      <entry name="!?*.form" />
+      <entry name="!?*.class" />
+      <entry name="!?*.groovy" />
+      <entry name="!?*.scala" />
+      <entry name="!?*.flex" />
+      <entry name="!?*.kt" />
+      <entry name="!?*.clj" />
+      <entry name="!?*.aj" />
+    </wildcardResourcePatterns>
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="false">
+        <processorPath useClasspath="true" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: mytestweb/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mytestweb/src/main/AndroidManifest.xml	(revision )
+++ mytestweb/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,11 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.asynctasktest.mengl.mytestweb">
+
+    <application android:allowBackup="true"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+>
+
+    </application>
+
+</manifest>
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision )
+++ app/src/main/res/layout/activity_main.xml	(revision )
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    tools:context="com.asynctasktest.mengl.baiduserach.MainActivity">
+
+    <EditText
+        android:id="@+id/et1"
+        android:hint="请输入检索内容"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content" />
+    <ListView
+        android:id="@+id/lv1"
+        android:layout_width="match_parent"
+        android:layout_below="@+id/et1"
+        android:layout_height="wrap_content"></ListView>
+</RelativeLayout>
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision )
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.asynctasktest.mengl.baiduserach" >
+
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/icon"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme" >
+        <activity android:name=".MainActivity" android:launchMode="singleTask">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity android:name=".WebActivity"
+
+            android:launchMode="singleTask">
+
+        </activity>
+        <!-- ATTENTION: This was auto-generated to add Google Play services to your project for
+             App Indexing.  See https://g.co/AppIndexing/AndroidStudio for more information. -->
+        <meta-data
+            android:name="com.google.android.gms.version"
+            android:value="@integer/google_play_services_version" />
+    </application>
+
+</manifest>
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision )
+++ build.gradle	(revision )
@@ -0,0 +1,23 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+
+buildscript {
+    repositories {
+        jcenter()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.5.0'
+
+        // NOTE: Do not place your application dependencies here; they belong
+        // in the individual module build.gradle files
+    }
+}
+
+allprojects {
+    repositories {
+        jcenter()
+    }
+}
+
+task clean(type: Delete) {
+    delete rootProject.buildDir
+}
Index: app/src/main/java/com/asynctasktest/mengl/baiduserach/util/BitmapUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/asynctasktest/mengl/baiduserach/util/BitmapUtil.java	(revision )
+++ app/src/main/java/com/asynctasktest/mengl/baiduserach/util/BitmapUtil.java	(revision )
@@ -0,0 +1,287 @@
+package com.asynctasktest.mengl.baiduserach.util;
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.util.List;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.res.Resources;
+import android.graphics.Bitmap;
+import android.graphics.Bitmap.Config;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.PixelFormat;
+import android.graphics.PointF;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
+import android.os.Environment;
+import android.util.DisplayMetrics;
+import android.util.Log;
+
+
+public class BitmapUtil {
+	static public Drawable getScaleDraw(String imgPath, Context mContext) {
+
+		Bitmap bitmap = null;
+		try {
+			Log.d("BitmapUtil",
+					"[getScaleDraw]imgPath is " + imgPath.toString());
+			File imageFile = new File(imgPath);
+			if (!imageFile.exists()) {
+				Log.d("BitmapUtil", "[getScaleDraw]file not  exists");
+				return null;
+			}
+			BitmapFactory.Options opts = new BitmapFactory.Options();
+			opts.inJustDecodeBounds = true;
+			BitmapFactory.decodeFile(imgPath, opts);
+
+			opts.inSampleSize = computeSampleSize(opts, -1, 800 * 480);
+			// Log.d("BitmapUtil","inSampleSize===>"+opts.inSampleSize);
+			opts.inJustDecodeBounds = false;
+			bitmap = BitmapFactory.decodeFile(imgPath, opts);
+
+		} catch (OutOfMemoryError err) {
+			Log.d("BitmapUtil", "[getScaleDraw] out of memory");
+
+		}
+		if (bitmap == null) {
+			return null;
+		}
+		Drawable resizeDrawable = new BitmapDrawable(mContext.getResources(),
+				bitmap);
+		return resizeDrawable;
+	}
+
+	public static void saveMyBitmap(Context mContext, Bitmap bitmap,
+			String desName) throws IOException {
+		FileOutputStream fOut = null;
+
+		if (Environment.getExternalStorageState() != Environment.MEDIA_MOUNTED) {
+			LogUtil.d("sdcard doesn't exit, save png to app dir");
+			fOut = mContext.openFileOutput(desName + ".png",
+					Context.MODE_PRIVATE);
+		} else {
+			File f = new File(Environment.getExternalStorageDirectory()
+					.getPath() + "/Asst/cache/" + desName + ".png");
+			f.createNewFile();
+			fOut = new FileOutputStream(f);
+		}
+		bitmap.compress(Bitmap.CompressFormat.PNG, 100, fOut);
+		try {
+			fOut.flush();
+		} catch (IOException e) {
+			e.printStackTrace();
+		}
+		try {
+			fOut.close();
+		} catch (IOException e) {
+			e.printStackTrace();
+		}
+	}
+
+	static public Bitmap getScaleBitmap(Resources res, int id) {
+
+		Bitmap bitmap = null;
+		try {
+			BitmapFactory.Options opts = new BitmapFactory.Options();
+			opts.inJustDecodeBounds = true;
+			BitmapFactory.decodeResource(res, id, opts);
+
+			opts.inSampleSize = computeSampleSize(opts, -1, 800 * 480);
+			// Log.d("BitmapUtil","inSampleSize===>"+opts.inSampleSize);
+			opts.inJustDecodeBounds = false;
+			bitmap = BitmapFactory.decodeResource(res, id, opts);
+		} catch (OutOfMemoryError err) {
+			Log.d("BitmapUtil", "[getScaleBitmap] out of memory");
+
+		}
+		return bitmap;
+	}
+
+	public static int computeSampleSize(BitmapFactory.Options options,
+			int minSideLength, int maxNumOfPixels) {
+
+		int initialSize = computeInitialSampleSize(options, minSideLength,
+				maxNumOfPixels);
+		int roundedSize;
+		if (initialSize <= 8) {
+			roundedSize = 1;
+			while (roundedSize < initialSize) {
+				roundedSize <<= 1;
+			}
+		} else {
+			roundedSize = (initialSize + 7) / 8 * 8;
+		}
+
+		return roundedSize;
+
+	}
+
+	private static int computeInitialSampleSize(BitmapFactory.Options options,
+			int minSideLength, int maxNumOfPixels) {
+
+		double w = options.outWidth;
+		double h = options.outHeight;
+		int lowerBound = (maxNumOfPixels == -1) ? 1 : (int) Math.ceil(Math
+				.sqrt(w * h / maxNumOfPixels));
+		int upperBound = (minSideLength == -1) ? 128 : (int) Math.min(
+				Math.floor(w / minSideLength), Math.floor(h / minSideLength));
+
+		if (upperBound < lowerBound) {
+			// return the larger one when there is no overlapping zone.
+			return lowerBound;
+		}
+
+		if ((maxNumOfPixels == -1) && (minSideLength == -1)) {
+			return 1;
+		} else if (minSideLength == -1) {
+			return lowerBound;
+		} else {
+			return upperBound;
+		}
+
+	}
+
+	public static Bitmap drawableToBitmap(Drawable drawable) {
+
+		Bitmap bitmap = Bitmap
+				.createBitmap(
+						drawable.getIntrinsicWidth(),
+						drawable.getIntrinsicHeight(),
+						drawable.getOpacity() != PixelFormat.OPAQUE ? Config.ARGB_8888
+								: Config.RGB_565);
+		Canvas canvas = new Canvas(bitmap);
+		canvas.setBitmap(bitmap);
+		drawable.setBounds(0, 0, drawable.getIntrinsicWidth(),
+				drawable.getIntrinsicHeight());
+		drawable.draw(canvas);
+		return bitmap;
+	}
+
+	public static Bitmap decodeBitmap(Resources res, int id) {
+		BitmapFactory.Options options = new BitmapFactory.Options();
+		options.inJustDecodeBounds = true;
+		// ͨ�����bitmap��ȡͼƬ�Ŀ�͸�
+		Bitmap bitmap = BitmapFactory.decodeResource(res, id, options);
+		if (bitmap == null) {
+			LogUtil.d("bitmapΪ��");
+		}
+		float realWidth = options.outWidth;
+		float realHeight = options.outHeight;
+		LogUtil.d("��ʵͼƬ�߶ȣ�" + realHeight + "���:" + realWidth);
+		// �������ű�
+		int scale = (int) ((realHeight > realWidth ? realHeight : realWidth) / 100);
+		if (scale <= 0) {
+			scale = 1;
+		}
+		LogUtil.d("scale=>" + scale);
+		options.inSampleSize = scale;
+		options.inJustDecodeBounds = false;
+		// ע�����Ҫ��options.inJustDecodeBounds ��Ϊ false,���ͼƬ��Ҫ��ȡ�����ġ�
+		bitmap = BitmapFactory.decodeResource(res, id, options);
+		int w = bitmap.getWidth();
+		int h = bitmap.getHeight();
+		LogUtil.d("����ͼ�߶ȣ�" + h + "���:" + w);
+		return bitmap;
+	}
+
+//	public static Bitmap getCombineBitmaps(List<MyBitmapEntity> mEntityList,
+//			Bitmap... bitmaps) {
+//		LogUtil.d("count=>" + mEntityList.size());
+//		Bitmap newBitmap = Bitmap.createBitmap(200, 200, Config.ARGB_8888);
+//		LogUtil.d("newBitmap=>" + newBitmap.getWidth() + ","
+//				+ newBitmap.getHeight());
+//		for (int i = 0; i < mEntityList.size(); i++) {
+//			LogUtil.d("i==>" + i);
+//			newBitmap = mixtureBitmap(newBitmap, bitmaps[i], new PointF(
+//					mEntityList.get(i).x, mEntityList.get(i).y));
+//		}
+//		return newBitmap;
+//	}
+
+	/**
+	 * �����Bitmap�ϲ���һ��ͼƬ��
+	 * 
+	 * @param int �����ͼ�ϳɶ�����
+	 * @param Bitmap
+	 *            ... Ҫ�ϳɵ�ͼƬ
+	 * @return
+	 */
+	public static Bitmap combineBitmaps(int columns, Bitmap... bitmaps) {
+		if (columns <= 0 || bitmaps == null || bitmaps.length == 0) {
+			throw new IllegalArgumentException(
+					"Wrong parameters: columns must > 0 and bitmaps.length must > 0.");
+		}
+		int maxWidthPerImage = 20;
+		int maxHeightPerImage = 20;
+		for (Bitmap b : bitmaps) {
+			maxWidthPerImage = maxWidthPerImage > b.getWidth() ? maxWidthPerImage
+					: b.getWidth();
+			maxHeightPerImage = maxHeightPerImage > b.getHeight() ? maxHeightPerImage
+					: b.getHeight();
+		}
+		LogUtil.d("maxWidthPerImage=>" + maxWidthPerImage
+				+ ";maxHeightPerImage=>" + maxHeightPerImage);
+		int rows = 0;
+		if (columns >= bitmaps.length) {
+			rows = 1;
+			columns = bitmaps.length;
+		} else {
+			rows = bitmaps.length % columns == 0 ? bitmaps.length / columns
+					: bitmaps.length / columns + 1;
+		}
+		Bitmap newBitmap = Bitmap.createBitmap(columns * maxWidthPerImage, rows
+				* maxHeightPerImage, Config.ARGB_8888);
+		LogUtil.d("newBitmap=>" + newBitmap.getWidth() + ","
+				+ newBitmap.getHeight());
+		for (int x = 0; x < rows; x++) {
+			for (int y = 0; y < columns; y++) {
+				int index = x * columns + y;
+				if (index >= bitmaps.length)
+					break;
+				LogUtil.d("y=>" + y + " * maxWidthPerImage=>"
+						+ maxWidthPerImage + " = " + (y * maxWidthPerImage));
+				LogUtil.d("x=>" + x + " * maxHeightPerImage=>"
+						+ maxHeightPerImage + " = " + (x * maxHeightPerImage));
+				newBitmap = mixtureBitmap(newBitmap, bitmaps[index],
+						new PointF(y * maxWidthPerImage, x * maxHeightPerImage));
+			}
+		}
+		return newBitmap;
+	}
+
+	/**
+	 * Mix two Bitmap as one.
+	 * 
+	 * @param bitmapOne
+	 * @param bitmapTwo
+	 * @param point
+	 *            where the second bitmap is painted.
+	 * @return
+	 */
+	public static Bitmap mixtureBitmap(Bitmap first, Bitmap second,
+			PointF fromPoint) {
+		if (first == null || second == null || fromPoint == null) {
+			return null;
+		}
+		Bitmap newBitmap = Bitmap.createBitmap(first.getWidth(),
+				first.getHeight(), Config.ARGB_8888);
+		Canvas cv = new Canvas(newBitmap);
+		cv.drawBitmap(first, 0, 0, null);
+		cv.drawBitmap(second, fromPoint.x, fromPoint.y, null);
+		cv.save(Canvas.ALL_SAVE_FLAG);
+		cv.restore();
+		return newBitmap;
+	}
+
+	public static void getScreenWidthAndHeight(Activity mContext) {
+		DisplayMetrics metric = new DisplayMetrics();
+		mContext.getWindowManager().getDefaultDisplay().getMetrics(metric);
+		int width = metric.widthPixels; // ��Ļ��ȣ����أ�
+		int height = metric.heightPixels; // ��Ļ�߶ȣ����أ�
+		LogUtil.d("screen width=>" + width + ",height=>" + height);
+	}
+
+}
Index: app/src/main/java/com/asynctasktest/mengl/baiduserach/WebActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/asynctasktest/mengl/baiduserach/WebActivity.java	(revision )
+++ app/src/main/java/com/asynctasktest/mengl/baiduserach/WebActivity.java	(revision )
@@ -0,0 +1,74 @@
+package com.asynctasktest.mengl.baiduserach;
+
+import android.app.Activity;
+import android.app.ProgressDialog;
+import android.os.Bundle;
+import android.text.Html;
+import android.webkit.WebView;
+import android.widget.TextView;
+
+import com.asynctasktest.mengl.baiduserach.util.FileUtil;
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.UnsupportedEncodingException;
+import java.net.URLEncoder;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipFile;
+
+/**
+ * Created by mengl on 16-3-17.
+ */
+public class WebActivity extends Activity {
+
+    WebView wv;
+    String path;
+
+    private ProgressDialog _processBar;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.web_layout);
+        wv = (WebView) findViewById(R.id.wv1);
+        wv.getSettings().setDefaultTextEncodingName("UTF-8");
+        path = this.getIntent().getStringExtra("path").toString();
+        _processBar = new ProgressDialog(this);
+        _processBar.setMessage("百度百科资料加载中，请稍后。。。");
+
+//        int i=1;
+//        String loadpath = "file:///"+FileUtil.getInnerSDCardPath()+"/baidusearch/htmls"+i+"/htmls"+i+"/"+path+".htm";
+//        File file = new File(loadpath);
+//        if(file.exists())
+
+
+
+
+
+//        String loadpath = "file:///"+FileUtil.getInnerSDCardPath()+"/baidusearch/htmls1/htmls1"+path+".htm";
+//        File file = new File("");
+//        if(!file.exists())
+//            loadpath = "file:///"+FileUtil.getInnerSDCardPath()+"/baidusearch/htmls30/htmls30/"+path+".htm";
+//        wv.loadUrl(loadpath);
+    }
+
+    private String fmtString(String str){
+        String notice = "";
+        try{
+            notice = URLEncoder.encode(str, "utf-8");
+        }catch(UnsupportedEncodingException ex){
+        }
+        return notice;
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+
+        ProgressDAsyncTask asyncTask = new ProgressDAsyncTask(_processBar,wv,path);
+        asyncTask.execute();
+    }
+}
Index: app/src/main/res/values-w820dp/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-w820dp/dimens.xml	(revision )
+++ app/src/main/res/values-w820dp/dimens.xml	(revision )
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
Index: app/src/main/java/com/asynctasktest/mengl/baiduserach/util/NetUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/asynctasktest/mengl/baiduserach/util/NetUtil.java	(revision )
+++ app/src/main/java/com/asynctasktest/mengl/baiduserach/util/NetUtil.java	(revision )
@@ -0,0 +1,59 @@
+package com.asynctasktest.mengl.baiduserach.util;
+
+import java.io.ByteArrayOutputStream;
+import java.io.InputStream;
+import java.net.HttpURLConnection;
+import java.net.URL;
+
+import android.os.Handler;
+import android.os.Message;
+
+public class NetUtil {
+	public static void NetGet(final String path,final Handler handler){
+		new Thread() {
+			public void run() {
+				try {
+					URL url = new URL(
+							FileUtil.getServerIp()+path);
+					HttpURLConnection conn = (HttpURLConnection) url
+							.openConnection();
+					conn.setRequestMethod("GET");
+					conn.setConnectTimeout(5000);
+					conn.setReadTimeout(10000);
+					conn.setRequestProperty(
+							"User-Agent",
+							"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; "
+									+ "Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; "
+									+ ".NET CLR 3.0.30729; Media Center PC 6.0; Shuame)");
+					int responseCode = conn.getResponseCode();
+					if (responseCode == 200) {
+						InputStream inputStream = conn.getInputStream();
+
+						ByteArrayOutputStream outStream = new ByteArrayOutputStream();
+						byte[] buffer = new byte[1024];
+						int len = -1;
+						while ((len = inputStream.read(buffer)) != -1) {
+							outStream.write(buffer, 0, len);
+						}
+						String result = new String(outStream.toByteArray(),
+								"utf-8");
+
+						// Bitmap bitmap =
+						// BitmapFactory.decodeStream(inputStream);
+						// iv.setImageBitmap(bitmap);
+						// ���ô�����Ϣ��ģʽ ��view������Ϣ�������߳�
+						Message msg = new Message();
+						msg.what = 1;
+						msg.obj = result;
+						handler.sendMessage(msg);
+					}
+				} 
+				catch (Exception e) {
+					// TODO Auto-generated catch block
+				e.printStackTrace();
+					
+				}
+			}
+		}.start();
+	}
+}
Index: app/src/androidTest/java/com/asynctasktest/mengl/baiduserach/ApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/asynctasktest/mengl/baiduserach/ApplicationTest.java	(revision )
+++ app/src/androidTest/java/com/asynctasktest/mengl/baiduserach/ApplicationTest.java	(revision )
@@ -0,0 +1,13 @@
+package com.asynctasktest.mengl.baiduserach;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision )
+++ app/src/main/res/values/styles.xml	(revision )
@@ -0,0 +1,11 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+</resources>
Index: app/src/main/java/com/asynctasktest/mengl/baiduserach/MainAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/asynctasktest/mengl/baiduserach/MainAdapter.java	(revision )
+++ app/src/main/java/com/asynctasktest/mengl/baiduserach/MainAdapter.java	(revision )
@@ -0,0 +1,61 @@
+package com.asynctasktest.mengl.baiduserach;
+
+import android.app.Activity;
+import android.content.Context;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseAdapter;
+import android.widget.TextView;
+
+import java.util.List;
+
+/**
+ * Created by mengl on 16-3-16.
+ */
+public class MainAdapter extends BaseAdapter{
+
+    private List<CiTiao> cts;
+    private   Context cont;
+
+
+    public   MainAdapter(List<CiTiao> cts,Activity cont){
+        this.cts = cts;
+        this.cont = cont;
+    }
+
+    @Override
+    public int getCount() {
+        return cts.size();
+    }
+
+    @Override
+    public Object getItem(int position) {
+        return null;
+    }
+
+    @Override
+    public long getItemId(int position) {
+        return 0;
+    }
+
+    private final class ListItemView {
+        private TextView name;
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        ListItemView listItemView = null;
+        if (convertView == null) {
+            listItemView = new ListItemView();
+
+            convertView = View.inflate(cont, R.layout.layout, null);
+            listItemView.name = (TextView) convertView.findViewById(R.id.tv1);
+            convertView.setTag(listItemView);
+        }else{
+            listItemView = (ListItemView) convertView.getTag();
+        }
+
+        listItemView.name.setText(cts.get(position).getName());
+        return convertView;
+    }
+}
Index: app/src/main/java/com/asynctasktest/mengl/baiduserach/util/UploadUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/asynctasktest/mengl/baiduserach/util/UploadUtil.java	(revision )
+++ app/src/main/java/com/asynctasktest/mengl/baiduserach/util/UploadUtil.java	(revision )
@@ -0,0 +1,104 @@
+package com.asynctasktest.mengl.baiduserach.util;
+
+import java.io.DataOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.HttpURLConnection;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.util.UUID;
+
+import android.util.Log;
+
+public class UploadUtil {
+
+    private static final String TAG = "uploadFile";
+    private static final int TIME_OUT = 10 * 1000; // 超时时间
+    private static final String CHARSET = "utf-8"; // 设置编码
+    /**
+     * 上传文件到服务器
+     * @param file 需要上传的文件
+     * @param RequestURL 请求的rul
+     * @return 返回响应的内容
+     */
+    public static int uploadFile(File file, String RequestURL) {
+        int res=0;
+        String result = null;
+        String BOUNDARY = UUID.randomUUID().toString(); // 边界标识 随机生成
+        String PREFIX = "--", LINE_END = "\r\n";
+        String CONTENT_TYPE = "multipart/form-data"; // 内容类型
+ 
+        try {
+            URL url = new URL(RequestURL);
+            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
+            conn.setReadTimeout(TIME_OUT);
+            conn.setConnectTimeout(TIME_OUT);
+            conn.setDoInput(true); // 允许输入流
+            conn.setDoOutput(true); // 允许输出流
+            conn.setUseCaches(false); // 不允许使用缓存
+            conn.setRequestMethod("POST"); // 请求方式
+            conn.setRequestProperty("Charset", CHARSET); // 设置编码
+            conn.setRequestProperty("connection", "keep-alive");
+            conn.setRequestProperty("Content-Type", CONTENT_TYPE + ";boundary="+ BOUNDARY);
+ 
+            if (file != null) {
+                /**
+                 * 当文件不为空时执行上传
+                 */
+                DataOutputStream dos = new DataOutputStream(conn.getOutputStream());
+                StringBuffer sb = new StringBuffer();
+                sb.append(PREFIX);
+                sb.append(BOUNDARY);
+                sb.append(LINE_END);
+                /**
+                 * 这里重点注意： name里面的值为服务器端需要key 只有这个key 才可以得到对应的文件
+                 * filename是文件的名字，包含后缀名
+                 */
+ 
+                sb.append("Content-Disposition: form-data; name=\"file\"; filename=\""
+                        + file.getName() + "\"" + LINE_END);
+                sb.append("Content-Type: application/octet-stream; charset="
+                        + CHARSET + LINE_END);
+                sb.append(LINE_END);
+                dos.write(sb.toString().getBytes());
+                InputStream is = new FileInputStream(file);
+                byte[] bytes = new byte[1024];
+                int len = 0;
+                while ((len = is.read(bytes)) != -1) {
+                    dos.write(bytes, 0, len);
+                }
+                is.close();
+                dos.write(LINE_END.getBytes());
+                byte[] end_data = (PREFIX + BOUNDARY + PREFIX + LINE_END)
+                        .getBytes();
+                dos.write(end_data);
+                dos.flush();
+                /**
+                 * 获取响应码 200=成功 当响应成功，获取响应的流
+                 */
+                 res = conn.getResponseCode();
+                Log.e(TAG, "response code:" + res);
+                if (res == 200) {
+                    Log.e(TAG, "request success");
+                    InputStream input = conn.getInputStream();
+                    StringBuffer sb1 = new StringBuffer();
+                    int ss;
+                    while ((ss = input.read()) != -1) {
+                        sb1.append((char) ss);
+                    }
+                    result = sb1.toString();
+                    Log.e(TAG, "result : " + result);
+                } else {
+                    Log.e(TAG, "request error");
+                }
+            }
+        } catch (MalformedURLException e) {
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return res;
+    }
+}
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision )
+++ app/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303F9F</color>
+    <color name="colorAccent">#FF4081</color>
+</resources>
Index: app/src/main/java/com/asynctasktest/mengl/baiduserach/ProgressDAsyncTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/asynctasktest/mengl/baiduserach/ProgressDAsyncTask.java	(revision )
+++ app/src/main/java/com/asynctasktest/mengl/baiduserach/ProgressDAsyncTask.java	(revision )
@@ -0,0 +1,80 @@
+package com.asynctasktest.mengl.baiduserach;
+
+import android.app.ProgressDialog;
+import android.os.AsyncTask;
+import android.webkit.WebView;
+
+import com.asynctasktest.mengl.baiduserach.util.FileUtil;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipFile;
+
+/**
+ * Created by mengl on 16-4-6.
+ */
+public class ProgressDAsyncTask  extends AsyncTask{
+
+    ProgressDialog progressDialog;
+    String path;
+    WebView wv;
+    String content = "";
+
+    public ProgressDAsyncTask(ProgressDialog progressDialog,WebView wv,String path) {
+        super();
+        this.progressDialog = progressDialog;
+        this.path = path;
+        this.wv = wv;
+    }
+
+    @Override
+    protected Object doInBackground(Object[] params) {
+        for(int i=1;i<=41;i++){
+            try {
+                String j = String.valueOf(i);
+                ZipFile zipFile = new ZipFile( FileUtil.getInnerSDCardPath()+"/baidusearch/htmls"+j+".zip");
+                ZipEntry ze = zipFile.getEntry(path+".htm");
+
+                if(ze!=null){
+                    BufferedReader br = new BufferedReader(
+                            new InputStreamReader(zipFile.getInputStream(ze)));
+
+
+                    String line;
+                    while ((line = br.readLine()) != null) {
+                        content = content+line;
+                    }
+
+                    break;
+                }
+
+//            if(file.exists()){
+//                wv.loadUrl( "file:///"+FileUtil.getInnerSDCardPath()+"/baidusearch/htmls"+j+"/htmls"+j+"/"+path+".htm");
+//                break;
+//            }
+            } catch (IOException e) {
+                continue;
+            }
+        }
+        return null;
+    }
+
+    @Override
+    protected void onPostExecute(Object o) {
+        wv.loadData(content, "text/html; charset=UTF-8", null);
+        progressDialog.dismiss();
+    }
+
+    //该方法运行在UI线程当中,并且运行在UI线程当中 可以对UI空间进行设置
+    @Override
+    protected void onPreExecute() {
+        progressDialog.show();
+    }
+
+
+    @Override
+    protected void onProgressUpdate(Object[] values) {
+    }
+}
Index: app/src/main/java/com/asynctasktest/mengl/baiduserach/util/HttpRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/asynctasktest/mengl/baiduserach/util/HttpRequest.java	(revision )
+++ app/src/main/java/com/asynctasktest/mengl/baiduserach/util/HttpRequest.java	(revision )
@@ -0,0 +1,146 @@
+package com.asynctasktest.mengl.baiduserach.util;
+
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStreamWriter;
+import java.io.PrintWriter;
+import java.net.URL;
+import java.net.URLConnection;
+import java.util.List;
+import java.util.Map;
+
+public class HttpRequest {
+    public static String sendGet(String url, String param) {
+        String result = "";
+        BufferedReader in = null;
+        try {
+            String urlNameString = url + "?" + param;
+            URL realUrl = new URL(urlNameString);
+            URLConnection connection = realUrl.openConnection();
+            connection.setRequestProperty("accept", "*/*");
+            connection.setRequestProperty("connection", "Keep-Alive");
+            connection.setRequestProperty("user-agent",
+                    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
+            connection.connect();
+            in = new BufferedReader(new InputStreamReader(
+                    connection.getInputStream()));
+            String line;
+            while ((line = in.readLine()) != null) {
+                result += line;
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        finally {
+            try {
+                if (in != null) {
+                    in.close();
+                }
+            } catch (Exception e2) {
+                e2.printStackTrace();
+            }
+        }
+        return result;
+    }
+
+    /**
+     * 
+     * @param url
+     * @param param
+     */
+    public static String sendPost(String url, String param) {
+        PrintWriter out = null;
+        BufferedReader in = null;
+        String result = "";
+        try {
+            URL realUrl = new URL(url);
+            URLConnection conn = realUrl.openConnection();
+            conn.setRequestProperty("Content-Type", "multipart/form-data");  
+            conn.setRequestProperty("accept", "*/*");
+            conn.setRequestProperty("connection", "Keep-Alive");
+            conn.setRequestProperty("user-agent",
+                    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
+            conn.setDoOutput(true);
+            conn.setDoInput(true);
+            
+            
+            out = new PrintWriter(conn.getOutputStream());
+            out.print(param);
+            out.flush();
+            in = new BufferedReader(
+                    new InputStreamReader(conn.getInputStream()));
+            String line;
+            while ((line = in.readLine()) != null) {
+                result += line;
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        finally{
+            try{
+                if(out!=null){
+                    out.close();
+                }
+                if(in!=null){
+                    in.close();
+                }
+            }
+            catch(IOException ex){
+                ex.printStackTrace();
+            }
+        }
+        return result;
+    }    
+    
+    public static void TestPost() throws IOException {  
+        
+        URL url = new URL("http://115.28.93.211/api/send_verifycode");  
+        URLConnection connection = url.openConnection();  
+        connection.setDoOutput(true);  
+        OutputStreamWriter out = new OutputStreamWriter(connection.getOutputStream(), "utf-8");  
+        
+//        httpConn.setRequestProperty("userId", userId + "");
+//		httpConn.setRequestProperty("num", tvC.getText()
+//				.toString());
+//		httpConn.setRequestProperty("orderNo", userId + ""+System.currentTimeMillis());
+//		httpConn.setRequestProperty("goodId", goodId + "");
+//		httpConn.setRequestProperty(
+//				"price",
+//				Integer.parseInt(money)
+//						* Integer.parseInt(tvC.getText()
+//								.toString()) + "");
+        
+        out.write("mobile=18686838565&codetype=1"); // 向页面传递数据。post的关键所在！  
+        out.flush();  
+        out.close();  
+        // 一旦发送成功，用以下方法就可以得到服务器的回应：  
+        String sCurrentLine;  
+        String sTotalString;  
+        sCurrentLine = "";  
+        sTotalString = "";  
+        InputStream l_urlStream;  
+        l_urlStream = connection.getInputStream();  
+        // 传说中的三层包装阿！  
+        BufferedReader l_reader = new BufferedReader(new InputStreamReader(  
+                l_urlStream));  
+        while ((sCurrentLine = l_reader.readLine()) != null) {  
+            sTotalString += sCurrentLine + "\r\n";  
+  
+        }  
+        System.out.println(sTotalString);  
+          
+    }  
+    
+    public static void main(String arg[]) throws IOException{
+//    	String localUrl =  "http://www.zhaoyuchong.com/app/community/addCommunity.do"; 
+//		String content = "userId=1&content=北京&address=北京1&picUrl=200&type=1";
+//		String result = "";
+//		result = HttpRequest.sendPost(localUrl, content);
+//		System.out.println("===="+result);
+    	TestPost();
+
+    }
+}
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision )
+++ .idea/modules.xml	(revision )
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/BaiDuSerach.iml" filepath="$PROJECT_DIR$/BaiDuSerach.iml" />
+      <module fileurl="file://$PROJECT_DIR$/app/app.iml" filepath="$PROJECT_DIR$/app/app.iml" />
+      <module fileurl="file://$PROJECT_DIR$/mytestweb/mytestweb.iml" filepath="$PROJECT_DIR$/mytestweb/mytestweb.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: mytestweb/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mytestweb/build.gradle	(revision )
+++ mytestweb/build.gradle	(revision )
@@ -0,0 +1,25 @@
+apply plugin: 'com.android.library'
+
+android {
+    compileSdkVersion 23
+    buildToolsVersion "23.0.2"
+
+    defaultConfig {
+        minSdkVersion 18
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+dependencies {
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    testCompile 'junit:junit:4.12'
+    compile 'com.android.support:appcompat-v7:23.1.1'
+}
Index: mytestweb/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mytestweb/.gitignore	(revision )
+++ mytestweb/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
Index: app/src/main/java/com/asynctasktest/mengl/baiduserach/CiTiao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/asynctasktest/mengl/baiduserach/CiTiao.java	(revision )
+++ app/src/main/java/com/asynctasktest/mengl/baiduserach/CiTiao.java	(revision )
@@ -0,0 +1,36 @@
+package com.asynctasktest.mengl.baiduserach;
+
+
+import org.xutils.db.annotation.Column;
+import org.xutils.db.annotation.Table;
+
+/**
+ * Created by mengl on 16-3-16.
+ */
+
+@Table(name = "tbl1")
+public class CiTiao {
+
+    @Column(name = "name")
+    private String name;
+
+    @Column(name = "path")
+    private String path;
+
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getPath() {
+        return path;
+    }
+
+    public void setPath(String path ) {
+        this.path = path;
+    }
+}
Index: app/src/main/res/layout/web_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/web_layout.xml	(revision )
+++ app/src/main/res/layout/web_layout.xml	(revision )
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+    <WebView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/wv1"></WebView>
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/tv1"
+        android:visibility="gone"/>
+</LinearLayout>
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision )
+++ app/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,5 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+</resources>
Index: mytestweb/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mytestweb/src/main/res/values/strings.xml	(revision )
+++ mytestweb/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,3 @@
+<resources>
+    <string name="app_name">MyTestWeb</string>
+</resources>
Index: app/src/main/java/com/asynctasktest/mengl/baiduserach/util/BaiDuMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/asynctasktest/mengl/baiduserach/util/BaiDuMap.java	(revision )
+++ app/src/main/java/com/asynctasktest/mengl/baiduserach/util/BaiDuMap.java	(revision )
@@ -0,0 +1,61 @@
+package com.asynctasktest.mengl.baiduserach.util;
+
+public class BaiDuMap {
+	 static double DEF_PI = 3.14159265359; // PI
+     static double DEF_2PI= 6.28318530712; // 2*PI
+     static double DEF_PI180= 0.01745329252; // PI/180.0
+     static double DEF_R =6370693.5; // radius of earth
+             //�����ڽ����
+     public static double GetShortDistance(double lon1, double lat1, double lon2, double lat2)
+     {
+         double ew1, ns1, ew2, ns2;
+         double dx, dy, dew;
+         double distance;
+         // �Ƕ�ת��Ϊ����
+         ew1 = lon1 * DEF_PI180;
+         ns1 = lat1 * DEF_PI180;
+         ew2 = lon2 * DEF_PI180;
+         ns2 = lat2 * DEF_PI180;
+         // ���Ȳ�
+         dew = ew1 - ew2;
+         // ���綫��������180 �ȣ����е���
+         if (dew > DEF_PI)
+         dew = DEF_2PI - dew;
+         else if (dew < -DEF_PI)
+         dew = DEF_2PI + dew;
+         dx = DEF_R * Math.cos(ns1) * dew; // �������򳤶�(��γ��Ȧ�ϵ�ͶӰ����)
+         dy = DEF_R * (ns1 - ns2); // �ϱ����򳤶�(�ھ���Ȧ�ϵ�ͶӰ����)
+         // ���ɶ�����б�߳�
+         distance = Math.sqrt(dx * dx + dy * dy);
+         return distance;
+     }
+             //������Զ����
+     public static double GetLongDistance(double lon1, double lat1, double lon2, double lat2)
+     {
+         double ew1, ns1, ew2, ns2;
+         double distance;
+         // �Ƕ�ת��Ϊ����
+         ew1 = lon1 * DEF_PI180;
+         ns1 = lat1 * DEF_PI180;
+         ew2 = lon2 * DEF_PI180;
+         ns2 = lat2 * DEF_PI180;
+         // ���Բ�ӻ���������еĽ�(����)
+         distance = Math.sin(ns1) * Math.sin(ns2) + Math.cos(ns1) * Math.cos(ns2) * Math.cos(ew1 - ew2);
+         // ����[-1..1]��Χ�ڣ��������
+         if (distance > 1.0)
+              distance = 1.0;
+         else if (distance < -1.0)
+               distance = -1.0;
+         // ���Բ�ӻ�����
+         distance = DEF_R * Math.acos(distance);
+         return distance;
+     }
+//     public static void main(String[] args) {
+//         double mLat1 = 39.90923; // point1γ��
+//         double mLon1 = 116.357428; // point1����
+//         double mLat2 = 39.90923;// point2γ��
+//         double mLon2 = 116.397428;// point2����
+//         double distance = BaiDuMap.GetShortDistance(mLon1, mLat1, mLon2, mLat2);
+//         System.out.println(distance);
+//     }
+}
Index: app/src/test/java/com/asynctasktest/mengl/baiduserach/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/com/asynctasktest/mengl/baiduserach/ExampleUnitTest.java	(revision )
+++ app/src/test/java/com/asynctasktest/mengl/baiduserach/ExampleUnitTest.java	(revision )
@@ -0,0 +1,15 @@
+package com.asynctasktest.mengl.baiduserach;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * To work on unit tests, switch the Test Artifact in the Build Variants view.
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/asynctasktest/mengl/baiduserach/util/FileUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/asynctasktest/mengl/baiduserach/util/FileUtil.java	(revision )
+++ app/src/main/java/com/asynctasktest/mengl/baiduserach/util/FileUtil.java	(revision )
@@ -0,0 +1,215 @@
+package com.asynctasktest.mengl.baiduserach.util;
+
+import java.io.BufferedReader;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.util.ArrayList;
+import java.util.List;
+
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.os.Environment;
+
+/**
+ * Title: FileUtil<br>
+ * Description: �ļ�����������<br>
+ * Company: CAREERS<br>
+ * Copyright @ 2013 CAREERS .All rights reserved.<br>
+ * Depend : TODO
+ * 
+ * @author mengl
+ * @Modified by
+ * @CreateDate 2014-8-20
+ * @Version
+ * @Revision
+ * @ModifiedDate
+ */
+public class FileUtil {
+
+	/**
+	 * Title: getSDcardPath<br>
+	 * Description: ��ȡ�ڴ�洢��·��<br>
+	 * Depend : TODO <br>
+	 * 
+	 * @return
+	 * @author mengl
+	 * @Modified by
+	 * @CreateDate 2014-8-20
+	 * @Version
+	 */
+	public static String getDbStorePath() {
+		String path = Environment.getDataDirectory() + "/data/"
+				+ "com.example.fragmenttest" + "/";
+		return path;
+	}
+
+	/**
+	 * Title: getSDcardPath<br>
+	 * Description: ��ȡ��ݴ洢��·��,sd������<br>
+	 * Depend : TODO <br>
+	 * 
+	 * @return
+	 * @author mengl
+	 * @Modified by
+	 * @CreateDate 2014-8-20
+	 * @Version
+	 */
+	public static String getSDcardPath() {
+		String path = Environment.getDataDirectory() + "/data/"
+				+ "com.example.fragmenttest" + "/";
+
+		boolean sdCardExist = Environment.getExternalStorageState().equals(
+				Environment.MEDIA_MOUNTED);
+		if (sdCardExist) {
+			path = Environment.getExternalStorageDirectory().getAbsolutePath()
+					+ "/";
+
+		}
+		return path;
+	}
+
+	/**
+	 * 获取内置SD卡路径
+	 * @return
+	 */
+	public static String getInnerSDCardPath() {
+		String path =  Environment.getExternalStorageDirectory().getPath();
+		return path;
+	}
+
+	/**
+	 * 获取外置SD卡路径
+	 * @return	应该就一条记录或空
+	 */
+	public static List getExtSDCardPath()
+	{
+		List lResult = new ArrayList();
+		try {
+			Runtime rt = Runtime.getRuntime();
+			Process proc = rt.exec("mount");
+			InputStream is = proc.getInputStream();
+			InputStreamReader isr = new InputStreamReader(is);
+			BufferedReader br = new BufferedReader(isr);
+			String line;
+			while ((line = br.readLine()) != null) {
+				if (line.contains("extSdCard"))
+				{
+					String [] arr = line.split(" ");
+					String path = arr[1];
+					File file = new File(path);
+					if (file.isDirectory())
+					{
+						lResult.add(path);
+					}
+				}
+			}
+			isr.close();
+		} catch (Exception e) {
+		}
+		return lResult;
+	}
+
+
+	
+	public static String getServerIp() {
+		String ip = "http://123.57.233.190:8080";
+		return ip;
+	}
+	public static String testIp() {
+		String ip = "http://192.168.1.114:8088";
+		return ip;
+	}
+	
+	public static boolean saveBitmap(Bitmap bitmap,String storePath)
+	{
+//		if(null == bitmap || quality < 0 || quality > 100 || null == storePath || "".equals(storePath)) {
+//			return false;
+//		}
+		File f = new File(storePath);
+		OutputStream stream = null;
+		try {
+			stream = new FileOutputStream(f);
+			bitmap.compress(Bitmap.CompressFormat.JPEG,80,stream);
+			stream.flush();
+			stream.close();
+//			bitmap.recycle();
+			System.gc();
+			return true;
+		}
+		catch (Exception e) {
+			e.printStackTrace();
+			if(null != f && f.exists()) {
+				f.delete();
+			}
+		}
+		return false;
+	}
+	
+	//删除指定文件夹下所有文件
+	//param path 文件夹完整绝对路径
+	   public static boolean delAllFile(String path) {
+	       boolean flag = false;
+	       File file = new File(path);
+	       if (!file.exists()) {
+	         return flag;
+	       }
+	       if (!file.isDirectory()) {
+	         return flag;
+	       }
+	       String[] tempList = file.list();
+	       File temp = null;
+	       for (int i = 0; i < tempList.length; i++) {
+	          if (path.endsWith(File.separator)) {
+	             temp = new File(path + tempList[i]);
+	          } else {
+	              temp = new File(path + File.separator + tempList[i]);
+	          }
+	          if (temp.isFile()) {
+	             temp.delete();
+	          }
+	          if (temp.isDirectory()) {
+	             delAllFile(path + "/" + tempList[i]);//先删除文件夹里面的文件
+	             delFolder(path + "/" + tempList[i]);//再删除空文件夹
+	             flag = true;
+	          }
+	       }
+	       return flag;
+	     }
+	   
+	   
+	 //删除文件夹
+	 //param folderPath 文件夹完整绝对路径
+	   public static void delFolder(String folderPath) {
+		     try {
+		        delAllFile(folderPath); //删除完里面所有内容
+		        String filePath = folderPath;
+		        filePath = filePath.toString();
+		        File myFilePath = new File(filePath);
+		        myFilePath.delete(); //删除空文件夹
+		     } catch (Exception e) {
+		       e.printStackTrace(); 
+		     }
+		}
+	   
+	   public static Bitmap compressImage(Bitmap image) {
+
+			ByteArrayOutputStream baos = new ByteArrayOutputStream();
+			image.compress(Bitmap.CompressFormat.JPEG, 100, baos);//质量压缩方法，这里100表示不压缩，把压缩后的数据存放到baos中
+			int options = 100;
+			while ( baos.toByteArray().length / 1024>200) {	//循环判断如果压缩后图片是否大于100kb,大于继续压缩		
+				baos.reset();//重置baos即清空baos
+				image.compress(Bitmap.CompressFormat.JPEG, options, baos);//这里压缩options%，把压缩后的数据存放到baos中
+				options -= 5;//每次都减少10
+			}
+			ByteArrayInputStream isBm = new ByteArrayInputStream(baos.toByteArray());//把压缩后的数据baos存放到ByteArrayInputStream中
+			Bitmap bitmap = BitmapFactory.decodeStream(isBm, null, null);//把ByteArrayInputStream数据生成图片
+			return bitmap;
+		}
+	}
+	
+
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew.bat	(revision )
+++ gradlew.bat	(revision )
@@ -0,0 +1,90 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision )
+++ .idea/misc.xml	(revision )
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="EntryPointsManager">
+    <entry_points version="2.0" />
+  </component>
+  <component name="NullableNotNullManager">
+    <option name="myDefaultNullable" value="android.support.annotation.Nullable" />
+    <option name="myDefaultNotNull" value="android.support.annotation.NonNull" />
+    <option name="myNullables">
+      <value>
+        <list size="4">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nullable" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.Nullable" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.Nullable" />
+        </list>
+      </value>
+    </option>
+    <option name="myNotNulls">
+      <value>
+        <list size="4">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.NonNull" />
+        </list>
+      </value>
+    </option>
+  </component>
+  <component name="ProjectLevelVcsManager" settingsEditedManually="false">
+    <OptionsSetting value="true" id="Add" />
+    <OptionsSetting value="true" id="Remove" />
+    <OptionsSetting value="true" id="Checkout" />
+    <OptionsSetting value="true" id="Update" />
+    <OptionsSetting value="true" id="Status" />
+    <OptionsSetting value="true" id="Edit" />
+    <ConfirmationsSetting value="0" id="Add" />
+    <ConfirmationsSetting value="0" id="Remove" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.7" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/build/classes" />
+  </component>
+  <component name="ProjectType">
+    <option name="id" value="Android" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision )
+++ .idea/runConfigurations.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision )
+++ app/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,3 @@
+<resources>
+    <string name="app_name">百度百科</string>
+</resources>
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision )
+++ .idea/vcs.xml	(revision )
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="E:/test_git2" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: mytestweb/src/test/java/com/asynctasktest/mengl/mytestweb/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mytestweb/src/test/java/com/asynctasktest/mengl/mytestweb/ExampleUnitTest.java	(revision )
+++ mytestweb/src/test/java/com/asynctasktest/mengl/mytestweb/ExampleUnitTest.java	(revision )
@@ -0,0 +1,15 @@
+package com.asynctasktest.mengl.mytestweb;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * To work on unit tests, switch the Test Artifact in the Build Variants view.
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: .idea/copyright/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/copyright/profiles_settings.xml	(revision )
+++ .idea/copyright/profiles_settings.xml	(revision )
@@ -0,0 +1,3 @@
+<component name="CopyrightManager">
+  <settings default="" />
+</component>
\ No newline at end of file
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- gradle.properties	(revision )
+++ gradle.properties	(revision )
@@ -0,0 +1,18 @@
+# Project-wide Gradle settings.
+
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+# Default value: -Xmx10248m -XX:MaxPermSize=256m
+# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
+
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
\ No newline at end of file
Index: gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew	(revision )
+++ gradlew	(revision )
@@ -0,0 +1,160 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(revision )
+++ .idea/encodings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: mytestweb/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mytestweb/proguard-rules.pro	(revision )
+++ mytestweb/proguard-rules.pro	(revision )
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in e:\Android\sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
Index: app/src/main/res/layout/layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout.xml	(revision )
+++ app/src/main/res/layout/layout.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <TextView
+        android:id="@+id/tv1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content" />
+</LinearLayout>
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision )
+++ app/proguard-rules.pro	(revision )
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in e:\Android\sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
Index: mytestweb/src/androidTest/java/com/asynctasktest/mengl/mytestweb/ApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mytestweb/src/androidTest/java/com/asynctasktest/mengl/mytestweb/ApplicationTest.java	(revision )
+++ mytestweb/src/androidTest/java/com/asynctasktest/mengl/mytestweb/ApplicationTest.java	(revision )
@@ -0,0 +1,13 @@
+package com.asynctasktest.mengl.mytestweb;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
